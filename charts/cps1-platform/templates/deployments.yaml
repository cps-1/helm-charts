apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}-server
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 3001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-gateway
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-gateway
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-gateway
    spec:
      containers:
        - name: cps1-gateway
          command:
            - ./cps1-gateway
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.config.tls.enabled }}
          env:
            - name: TLS_CERT
              value: /etc/tls/tls.crt
            - name: TLS_KEY
              value: /etc/tls/tls.key
          {{- end }}
          ports:
            - containerPort: 2222
              protocol: TCP
     {{- if .Values.config.tls.enabled }}
            - containerPort: 8443
              protocol: TCP
          volumeMounts:
            - name: tls
              mountPath: /etc/tls
              readOnly: true
      volumes:
        - name: tls
          secret:
            secretName: {{ .Release.Name }}-gateway-certificate
      {{- else }}
            - containerPort: 8080
              protocol: TCP
      {{- end }}
